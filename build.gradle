plugins {
    id "idea"
    id "java"
    id "groovy"
    id "com.energizedwork.webdriver-binaries" version "1.4"
    id "com.energizedwork.idea-base" version "1.2"
}

ext {
    // The drivers we want to use
    drivers = ["firefox", "chrome", "chromeHeadless", "firefoxHeadless", "ie", "ieHeadless"]

    ext {
        groovyVersion = '2.4.15'
        gebVersion = '2.1'
        seleniumVersion = '3.11.0'
        chromeDriverVersion = '2.38'
        geckoDriverVersion = '0.18.0'
        ieDriverVersion = '3.12.0'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile('org.apache.ivy:ivy:2.4.0')

    // If using Spock, need to depend on geb-spock
    testCompile("org.gebish:geb-spock:$gebVersion")
    testCompile("org.spockframework:spock-core:1.1-groovy-2.4") {
        exclude group: "org.codehaus.groovy"
    }
    testCompile("org.codehaus.groovy:groovy-all:$groovyVersion")

    // If using JUnit, need to depend on geb-junit (3 or 4)
//    testCompile "org.gebish:geb-junit4:$gebVersion"

    testCompile('org.apache.commons:commons-lang3:3.7')

    // Drivers
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-ie-driver:$seleniumVersion"
}

webdriverBinaries {
    chromedriver chromeDriverVersion
    geckodriver geckoDriverVersion
    iedriverserver ieDriverVersion
}

drivers.each { driver ->
    task "${driver}Test"(type: Test) {
        group JavaBasePlugin.VERIFICATION_GROUP

        reports {
            html.destination = reporting.file("$name/tests")
            junitXml.destination = file("$buildDir/test-results/$name")
        }

        outputs.upToDateWhen { false }  // Always run tests

        systemProperty "geb.build.reportsDir", reporting.file("geb/$name")
        systemProperty "geb.env", driver

        systemProperty "environment", System.getProperty("environment", "production")
        systemProperty "device", System.getProperty("device", "pc")
        systemProperty "prooxy", System.getProperty("prooxy", "noProxy")
    }
}

test {
    dependsOn drivers.collect { tasks["${it}Test"] }
    enabled = false
}

tasks.withType(Test) {
    useJUnit {
        if (project.hasProperty("testCategory")) {
            includeCategories "sample.infrastructure.testcategories." + project.getProperty("testCategory")
        }
        testLogging {
            showStandardStreams = true
            exceptionFormat = 'full'
        }
    }
}

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.memoryMaximumSize = '256m'
}
